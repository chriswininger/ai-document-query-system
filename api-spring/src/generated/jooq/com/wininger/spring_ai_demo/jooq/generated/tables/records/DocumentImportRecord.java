/*
 * This file is generated by jOOQ.
 */
package com.wininger.spring_ai_demo.jooq.generated.tables.records;


import com.wininger.spring_ai_demo.jooq.generated.tables.DocumentImport;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DocumentImportRecord extends UpdatableRecordImpl<DocumentImportRecord> implements Record6<Integer, String, String, JSONB, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.document_import.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.document_import.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.document_import.source_name</code>.
     */
    public void setSourceName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.document_import.source_name</code>.
     */
    public String getSourceName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.document_import.non_chunked_content</code>.
     */
    public void setNonChunkedContent(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.document_import.non_chunked_content</code>.
     */
    public String getNonChunkedContent() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.document_import.metadata</code>.
     */
    public void setMetadata(JSONB value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.document_import.metadata</code>.
     */
    public JSONB getMetadata() {
        return (JSONB) get(3);
    }

    /**
     * Setter for <code>public.document_import.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.document_import.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.document_import.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.document_import.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, JSONB, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, String, JSONB, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return DocumentImport.DOCUMENT_IMPORT.ID;
    }

    @Override
    public Field<String> field2() {
        return DocumentImport.DOCUMENT_IMPORT.SOURCE_NAME;
    }

    @Override
    public Field<String> field3() {
        return DocumentImport.DOCUMENT_IMPORT.NON_CHUNKED_CONTENT;
    }

    @Override
    public Field<JSONB> field4() {
        return DocumentImport.DOCUMENT_IMPORT.METADATA;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return DocumentImport.DOCUMENT_IMPORT.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return DocumentImport.DOCUMENT_IMPORT.UPDATED_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getSourceName();
    }

    @Override
    public String component3() {
        return getNonChunkedContent();
    }

    @Override
    public JSONB component4() {
        return getMetadata();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdatedAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getSourceName();
    }

    @Override
    public String value3() {
        return getNonChunkedContent();
    }

    @Override
    public JSONB value4() {
        return getMetadata();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdatedAt();
    }

    @Override
    public DocumentImportRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public DocumentImportRecord value2(String value) {
        setSourceName(value);
        return this;
    }

    @Override
    public DocumentImportRecord value3(String value) {
        setNonChunkedContent(value);
        return this;
    }

    @Override
    public DocumentImportRecord value4(JSONB value) {
        setMetadata(value);
        return this;
    }

    @Override
    public DocumentImportRecord value5(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public DocumentImportRecord value6(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public DocumentImportRecord values(Integer value1, String value2, String value3, JSONB value4, LocalDateTime value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DocumentImportRecord
     */
    public DocumentImportRecord() {
        super(DocumentImport.DOCUMENT_IMPORT);
    }

    /**
     * Create a detached, initialised DocumentImportRecord
     */
    public DocumentImportRecord(Integer id, String sourceName, String nonChunkedContent, JSONB metadata, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(DocumentImport.DOCUMENT_IMPORT);

        setId(id);
        setSourceName(sourceName);
        setNonChunkedContent(nonChunkedContent);
        setMetadata(metadata);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
