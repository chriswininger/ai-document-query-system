/*
 * This file is generated by jOOQ.
 */
package com.wininger.spring_ai_demo.jooq.generated.tables.records;


import com.wininger.spring_ai_demo.jooq.generated.tables.VectorStore;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class VectorStoreRecord extends UpdatableRecordImpl<VectorStoreRecord> implements Record4<UUID, String, JSON, Object> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.vector_store.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.vector_store.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.vector_store.content</code>.
     */
    public void setContent(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.vector_store.content</code>.
     */
    public String getContent() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.vector_store.metadata</code>.
     */
    public void setMetadata(JSON value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.vector_store.metadata</code>.
     */
    public JSON getMetadata() {
        return (JSON) get(2);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setEmbedding(Object value) {
        set(3, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getEmbedding() {
        return get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, String, JSON, Object> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, String, JSON, Object> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return VectorStore.VECTOR_STORE.ID;
    }

    @Override
    public Field<String> field2() {
        return VectorStore.VECTOR_STORE.CONTENT;
    }

    @Override
    public Field<JSON> field3() {
        return VectorStore.VECTOR_STORE.METADATA;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Field<Object> field4() {
        return VectorStore.VECTOR_STORE.EMBEDDING;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getContent();
    }

    @Override
    public JSON component3() {
        return getMetadata();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Object component4() {
        return getEmbedding();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getContent();
    }

    @Override
    public JSON value3() {
        return getMetadata();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Object value4() {
        return getEmbedding();
    }

    @Override
    public VectorStoreRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public VectorStoreRecord value2(String value) {
        setContent(value);
        return this;
    }

    @Override
    public VectorStoreRecord value3(JSON value) {
        setMetadata(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public VectorStoreRecord value4(Object value) {
        setEmbedding(value);
        return this;
    }

    @Override
    public VectorStoreRecord values(UUID value1, String value2, JSON value3, Object value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VectorStoreRecord
     */
    public VectorStoreRecord() {
        super(VectorStore.VECTOR_STORE);
    }

    /**
     * Create a detached, initialised VectorStoreRecord
     */
    public VectorStoreRecord(UUID id, String content, JSON metadata, Object embedding) {
        super(VectorStore.VECTOR_STORE);

        setId(id);
        setContent(content);
        setMetadata(metadata);
        setEmbedding(embedding);
        resetChangedOnNotNull();
    }
}
