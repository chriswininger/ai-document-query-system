/*
 * This file is generated by jOOQ.
 */
package com.wininger.spring_ai_demo.jooq.generated.tables.records;


import com.wininger.spring_ai_demo.jooq.generated.tables.DocumentImportChunk;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DocumentImportChunkRecord extends UpdatableRecordImpl<DocumentImportChunkRecord> implements Record8<Integer, Integer, String, String, JSONB, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.document_import_chunk.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.document_import_chunk.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.document_import_chunk.document_import_id</code>.
     */
    public void setDocumentImportId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.document_import_chunk.document_import_id</code>.
     */
    public Integer getDocumentImportId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.document_import_chunk.source_name</code>.
     */
    public void setSourceName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.document_import_chunk.source_name</code>.
     */
    public String getSourceName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.document_import_chunk.content</code>.
     */
    public void setContent(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.document_import_chunk.content</code>.
     */
    public String getContent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.document_import_chunk.metadata</code>.
     */
    public void setMetadata(JSONB value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.document_import_chunk.metadata</code>.
     */
    public JSONB getMetadata() {
        return (JSONB) get(4);
    }

    /**
     * Setter for <code>public.document_import_chunk.status</code>.
     */
    public void setStatus(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.document_import_chunk.status</code>.
     */
    public String getStatus() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.document_import_chunk.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.document_import_chunk.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.document_import_chunk.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.document_import_chunk.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, String, String, JSONB, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, Integer, String, String, JSONB, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return DocumentImportChunk.DOCUMENT_IMPORT_CHUNK.ID;
    }

    @Override
    public Field<Integer> field2() {
        return DocumentImportChunk.DOCUMENT_IMPORT_CHUNK.DOCUMENT_IMPORT_ID;
    }

    @Override
    public Field<String> field3() {
        return DocumentImportChunk.DOCUMENT_IMPORT_CHUNK.SOURCE_NAME;
    }

    @Override
    public Field<String> field4() {
        return DocumentImportChunk.DOCUMENT_IMPORT_CHUNK.CONTENT;
    }

    @Override
    public Field<JSONB> field5() {
        return DocumentImportChunk.DOCUMENT_IMPORT_CHUNK.METADATA;
    }

    @Override
    public Field<String> field6() {
        return DocumentImportChunk.DOCUMENT_IMPORT_CHUNK.STATUS;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return DocumentImportChunk.DOCUMENT_IMPORT_CHUNK.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return DocumentImportChunk.DOCUMENT_IMPORT_CHUNK.UPDATED_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getDocumentImportId();
    }

    @Override
    public String component3() {
        return getSourceName();
    }

    @Override
    public String component4() {
        return getContent();
    }

    @Override
    public JSONB component5() {
        return getMetadata();
    }

    @Override
    public String component6() {
        return getStatus();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getDocumentImportId();
    }

    @Override
    public String value3() {
        return getSourceName();
    }

    @Override
    public String value4() {
        return getContent();
    }

    @Override
    public JSONB value5() {
        return getMetadata();
    }

    @Override
    public String value6() {
        return getStatus();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    public DocumentImportChunkRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public DocumentImportChunkRecord value2(Integer value) {
        setDocumentImportId(value);
        return this;
    }

    @Override
    public DocumentImportChunkRecord value3(String value) {
        setSourceName(value);
        return this;
    }

    @Override
    public DocumentImportChunkRecord value4(String value) {
        setContent(value);
        return this;
    }

    @Override
    public DocumentImportChunkRecord value5(JSONB value) {
        setMetadata(value);
        return this;
    }

    @Override
    public DocumentImportChunkRecord value6(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public DocumentImportChunkRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public DocumentImportChunkRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public DocumentImportChunkRecord values(Integer value1, Integer value2, String value3, String value4, JSONB value5, String value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DocumentImportChunkRecord
     */
    public DocumentImportChunkRecord() {
        super(DocumentImportChunk.DOCUMENT_IMPORT_CHUNK);
    }

    /**
     * Create a detached, initialised DocumentImportChunkRecord
     */
    public DocumentImportChunkRecord(Integer id, Integer documentImportId, String sourceName, String content, JSONB metadata, String status, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(DocumentImportChunk.DOCUMENT_IMPORT_CHUNK);

        setId(id);
        setDocumentImportId(documentImportId);
        setSourceName(sourceName);
        setContent(content);
        setMetadata(metadata);
        setStatus(status);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
