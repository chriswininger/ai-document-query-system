/*
 * This file is generated by jOOQ.
 */
package com.wininger.spring_ai_demo.jooq.generated;


import com.wininger.spring_ai_demo.jooq.generated.tables.DocumentImport;
import com.wininger.spring_ai_demo.jooq.generated.tables.DocumentImportChunk;
import com.wininger.spring_ai_demo.jooq.generated.tables.Each;
import com.wininger.spring_ai_demo.jooq.generated.tables.FlywaySchemaHistory;
import com.wininger.spring_ai_demo.jooq.generated.tables.Skeys;
import com.wininger.spring_ai_demo.jooq.generated.tables.Svals;
import com.wininger.spring_ai_demo.jooq.generated.tables.VectorStore;
import com.wininger.spring_ai_demo.jooq.generated.tables.records.EachRecord;
import com.wininger.spring_ai_demo.jooq.generated.tables.records.SkeysRecord;
import com.wininger.spring_ai_demo.jooq.generated.tables.records.SvalsRecord;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;


/**
 * Convenience access to all tables in public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Tables {

    /**
     * The table <code>public.document_import</code>.
     */
    public static final DocumentImport DOCUMENT_IMPORT = DocumentImport.DOCUMENT_IMPORT;

    /**
     * The table <code>public.document_import_chunk</code>.
     */
    public static final DocumentImportChunk DOCUMENT_IMPORT_CHUNK = DocumentImportChunk.DOCUMENT_IMPORT_CHUNK;

    /**
     * The table <code>public.each</code>.
     */
    public static final Each EACH = Each.EACH;

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Result<EachRecord> EACH(
          Configuration configuration
        , Object hs
    ) {
        return configuration.dsl().selectFrom(com.wininger.spring_ai_demo.jooq.generated.tables.Each.EACH.call(
              hs
        )).fetch();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Each EACH(
          Object hs
    ) {
        return com.wininger.spring_ai_demo.jooq.generated.tables.Each.EACH.call(
            hs
        );
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Each EACH(
          Field<Object> hs
    ) {
        return com.wininger.spring_ai_demo.jooq.generated.tables.Each.EACH.call(
            hs
        );
    }

    /**
     * The table <code>public.flyway_schema_history</code>.
     */
    public static final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>public.skeys</code>.
     */
    public static final Skeys SKEYS = Skeys.SKEYS;

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Result<SkeysRecord> SKEYS(
          Configuration configuration
        , Object __1
    ) {
        return configuration.dsl().selectFrom(com.wininger.spring_ai_demo.jooq.generated.tables.Skeys.SKEYS.call(
              __1
        )).fetch();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Skeys SKEYS(
          Object __1
    ) {
        return com.wininger.spring_ai_demo.jooq.generated.tables.Skeys.SKEYS.call(
            __1
        );
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Skeys SKEYS(
          Field<Object> __1
    ) {
        return com.wininger.spring_ai_demo.jooq.generated.tables.Skeys.SKEYS.call(
            __1
        );
    }

    /**
     * The table <code>public.svals</code>.
     */
    public static final Svals SVALS = Svals.SVALS;

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Result<SvalsRecord> SVALS(
          Configuration configuration
        , Object __1
    ) {
        return configuration.dsl().selectFrom(com.wininger.spring_ai_demo.jooq.generated.tables.Svals.SVALS.call(
              __1
        )).fetch();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Svals SVALS(
          Object __1
    ) {
        return com.wininger.spring_ai_demo.jooq.generated.tables.Svals.SVALS.call(
            __1
        );
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Svals SVALS(
          Field<Object> __1
    ) {
        return com.wininger.spring_ai_demo.jooq.generated.tables.Svals.SVALS.call(
            __1
        );
    }

    /**
     * The table <code>public.vector_store</code>.
     */
    public static final VectorStore VECTOR_STORE = VectorStore.VECTOR_STORE;
}
