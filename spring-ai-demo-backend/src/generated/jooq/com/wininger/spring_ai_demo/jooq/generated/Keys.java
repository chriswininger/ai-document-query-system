/*
 * This file is generated by jOOQ.
 */
package com.wininger.spring_ai_demo.jooq.generated;


import com.wininger.spring_ai_demo.jooq.generated.tables.DocumentImport;
import com.wininger.spring_ai_demo.jooq.generated.tables.DocumentImportChunk;
import com.wininger.spring_ai_demo.jooq.generated.tables.FlywaySchemaHistory;
import com.wininger.spring_ai_demo.jooq.generated.tables.VectorStore;
import com.wininger.spring_ai_demo.jooq.generated.tables.records.DocumentImportChunkRecord;
import com.wininger.spring_ai_demo.jooq.generated.tables.records.DocumentImportRecord;
import com.wininger.spring_ai_demo.jooq.generated.tables.records.FlywaySchemaHistoryRecord;
import com.wininger.spring_ai_demo.jooq.generated.tables.records.VectorStoreRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DocumentImportRecord> DOCUMENT_IMPORT_PKEY = Internal.createUniqueKey(DocumentImport.DOCUMENT_IMPORT, DSL.name("document_import_pkey"), new TableField[] { DocumentImport.DOCUMENT_IMPORT.ID }, true);
    public static final UniqueKey<DocumentImportChunkRecord> DOCUMENT_IMPORT_CHUNK_PKEY = Internal.createUniqueKey(DocumentImportChunk.DOCUMENT_IMPORT_CHUNK, DSL.name("document_import_chunk_pkey"), new TableField[] { DocumentImportChunk.DOCUMENT_IMPORT_CHUNK.ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<VectorStoreRecord> VECTOR_STORE_PKEY = Internal.createUniqueKey(VectorStore.VECTOR_STORE, DSL.name("vector_store_pkey"), new TableField[] { VectorStore.VECTOR_STORE.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<DocumentImportChunkRecord, DocumentImportRecord> DOCUMENT_IMPORT_CHUNK__DOCUMENT_IMPORT_CHUNK_DOCUMENT_IMPORT_ID_FKEY = Internal.createForeignKey(DocumentImportChunk.DOCUMENT_IMPORT_CHUNK, DSL.name("document_import_chunk_document_import_id_fkey"), new TableField[] { DocumentImportChunk.DOCUMENT_IMPORT_CHUNK.DOCUMENT_IMPORT_ID }, Keys.DOCUMENT_IMPORT_PKEY, new TableField[] { DocumentImport.DOCUMENT_IMPORT.ID }, true);
}
